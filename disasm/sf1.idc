//
// +-------------------------------------------------------------------------+
// |     This file is generated by The Interactive Disassembler (IDA)        |
// |     Copyright (c) 2007 by DataRescue sa/nv, <ida@datarescue.com>        |
// | Licensed to: Mach EDV Dienstleistungen, Jan Mach, 1 user, adv, 11/2007  |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void) {
        GenInfo();              // various settings
        Segments();             // segmentation
        Enums();                // enumerations
        Structures();           // structure types
        Bytes();                // individual bytes (code,data)
        Functions();            // function definitions
        SegRegs();              // segment register values
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("68000");
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0X0);
	;
	SegCreate(0X0,0X180000,0X0,1,1,2);
	SegRename(0X0,"ROM");
	SegClass (0X0,"CODE");
	SetSegmentType(0X0,2);
	SegCreate(0X200000,0X204000,0X0,1,1,2);
	SegRename(0X200000,"SRAM");
	SegClass (0X200000,"");
	SegCreate(0XA00000,0XA0FFFF,0X0,0,1,2);
	SegRename(0XA00000,"Z80");
	SegClass (0XA00000,"");
	SegCreate(0XA10000,0XA10FFF,0X0,0,1,2);
	SegRename(0XA10000,"IO");
	SegClass (0XA10000,"");
	SegCreate(0XA11000,0XA11FFF,0X0,0,1,2);
	SegRename(0XA11000,"CTRL");
	SegClass (0XA11000,"");
	SegCreate(0XC00000,0XC00012,0X0,1,1,2);
	SegRename(0XC00000,"VDP");
	SegClass (0XC00000,"");
	SegCreate(0XFF0000,0XFFFFFF,0X0,0,1,2);
	SegRename(0XFF0000,"RAM");
	SegClass (0XFF0000,"");
	LowVoids(0x0);
	HighVoids(0xFFFFFF);
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0X0,	0,	"; File Name   : E:\\SEGADEV\\IDB\\SF1\\Shining Force (U) [!].bin");
	ExtLinA		(0X0,	1,	"; Format      : Binary file");
	ExtLinA		(0X0,	2,	"; Base Address: 0000h Range: 0000h - 180000h Loaded length: 180000h");
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
}

// End of file.
